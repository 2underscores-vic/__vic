// Generic utilities for elementwise output
//
// Platform: ISO C++ 98/11
// $Id$
//
// (c) __vic 2011

#ifndef __VIC_WRITERS_H
#define __VIC_WRITERS_H

#include<__vic/defs.h>

namespace __vic {

//////////////////////////////////////////////////////////////////////////////
// Expected writer's interface (concept)
//////////////////////////////////////////////////////////////////////////////
// template<class ElementT>
// interace Writer
// {
//     Writer(Writer && ); or Writer(const Writer & );
//     void write(ElementT ); // throws on errors
// };
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
template<class Cont, class T = typename Cont::value_type>
class push_back_writer
{
    Cont *cont;
public:
    explicit push_back_writer(Cont &c) : cont(&c) {}
    void write(T v) { cont->push_back(v); }
};
//////////////////////////////////////////////////////////////////////////////

} // namespace

#endif // header guard
