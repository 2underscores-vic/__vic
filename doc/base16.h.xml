<chapter>
<title><tt>__vic/base16.h</tt></title>

<p>BASE16 encoder and decoder.</p>


<chapter>
<title><tt>base16</tt></title>

<p>A class used as a namespace. Contains only types and static functions. No
objects of this class are supposed to be created.</p>

</chapter>


<chapter>
<title><tt>base16::bad_format</tt></title>

<code-block lang="C++"><![CDATA[
struct base16::bad_format : public std::exception
{
    const char *what() const noexcept;
};
]]></code-block>

<p>An exception class.</p>

</chapter>


<chapter>
<title><tt>base16::encode_lower()</tt></title>

<code-block lang="C++"><![CDATA[
// Bytes -> Text
template<class InIter, class OutIter>
void base16::encode_lower(InIter begin, InIter end, OutIter out);
]]></code-block>

<p>Encodes [<tt>begin</tt>, <tt>end</tt>) range of bytes and writes the
resulting characters to <tt>out</tt>. Lower case is used for hexadecimal
digits.</p>

</chapter>


<chapter>
<title><tt>base16::encode_upper()</tt></title>

<code-block lang="C++"><![CDATA[
// Bytes -> Text
template<class InIter, class OutIter>
void base16::encode_upper(InIter begin, InIter end, OutIter out);
]]></code-block>

<p>Encodes [<tt>begin</tt>, <tt>end</tt>) range of bytes and writes the
resulting characters to <tt>out</tt>. Upper case is used for hexadecimal
digits.</p>

<section><title>Example</title>
<code-block lang="C++"><![CDATA[
using bytes = std::string;
std::string encode_base16(const bytes &s)
{
    std::string res;
    res.reserve(s.length() * 2);
    __vic::base16::encode_upper(s.begin(), s.end(), std::back_inserter(res));
    return res;
}
]]></code-block>
</section>

</chapter>


<chapter>
<title><tt>base16::decode()</tt></title>

<code-block lang="C++"><![CDATA[
// Text -> Bytes
template<class InIter, class OutIter>
void base16::decode(InIter begin, InIter end, OutIter out);
]]></code-block>

<p>Decodes [<tt>begin</tt>, <tt>end</tt>) range of characters and writes the
resulting bytes to <tt>out</tt>. <tt>bad_format</tt> is thrown if the input
sequence has invalid BASE16 format.</p>

<section><title>Example</title>
<code-block lang="C++"><![CDATA[
using bytes = std::string;
bytes decode_base16(const std::string &s)
{
    bytes res;
    res.reserve(s.length() / 2);
    __vic::base16::decode(s.begin(), s.end(), std::back_inserter(res));
    return res;
}
]]></code-block>
</section>

</chapter>


</chapter>
